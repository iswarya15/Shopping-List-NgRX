{"ast":null,"code":"import { Ingredient } from 'src/app/shared/ingredient.model';\nimport * as ShoppingActions from '../store/shopping-list.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-list.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"editForm\"];\n\nfunction ShoppingEditComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ShoppingEditComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onDelete());\n    });\n    i0.ɵɵtext(1, \" Delete \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ShoppingEditComponent = /*#__PURE__*/(() => {\n  class ShoppingEditComponent {\n    constructor(shoppingListService, store) {\n      this.shoppingListService = shoppingListService;\n      this.store = store;\n      this.editMode = false;\n    }\n\n    ngOnInit() {\n      this.store.select('shoppingList').subscribe(stateData => {\n        var _a, _b;\n\n        this.editMode = true;\n        this.editedIngredient = stateData.editedIngredient;\n        this.editForm.setValue({\n          name: (_a = this.editedIngredient) === null || _a === void 0 ? void 0 : _a.name,\n          amount: (_b = this.editedIngredient) === null || _b === void 0 ? void 0 : _b.amount\n        });\n      });\n    }\n\n    onSubmit() {\n      const value = this.editForm.value;\n      const ingredient = new Ingredient(value.name, value.amount);\n\n      if (this.editMode) {\n        // this.shoppingListService.updateIngredient(this.editedIndex, ingredient);\n        this.store.dispatch(new ShoppingActions.UpdateIngredient({\n          index: this.editedIndex,\n          ingredient: ingredient\n        }));\n      } else {\n        // this.shoppingListService.addIngredients([ingredient]);\n        this.store.dispatch(new ShoppingActions.AddIngredient(ingredient));\n      }\n\n      this.editMode = false;\n      this.editForm.reset();\n      this.store.dispatch(new ShoppingActions.StopEdit());\n    }\n\n    onClear() {\n      this.editForm.reset();\n      this.editMode = false;\n    }\n\n    onDelete() {\n      //  this.shoppingListService.deleteIngredient(this.editedIndex);\n      this.store.dispatch(new ShoppingActions.DeleteIngredient(this.editedIndex));\n      this.onClear();\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n      this.store.dispatch(new ShoppingActions.StopEdit());\n    }\n\n  }\n\n  ShoppingEditComponent.ɵfac = function ShoppingEditComponent_Factory(t) {\n    return new (t || ShoppingEditComponent)(i0.ɵɵdirectiveInject(i1.ShoppingListService), i0.ɵɵdirectiveInject(i2.Store));\n  };\n\n  ShoppingEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShoppingEditComponent,\n    selectors: [[\"app-shopping-edit\"]],\n    viewQuery: function ShoppingEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editForm = _t.first);\n      }\n    },\n    decls: 20,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"ngSubmit\"], [\"editForm\", \"ngForm\"], [1, \"col-sm-5\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"col-sm-2\", \"form-group\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"ngModel\", \"\", \"required\", \"\", \"pattern\", \"^[1-9]+[0-9]*$\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 2, \"margin-right\", \"5px\", 3, \"disabled\"], [\"class\", \"btn btn-danger\", \"type\", \"button\", \"style\", \"margin-right: 5px\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 2, \"margin-right\", \"5px\", 3, \"click\"]],\n    template: function ShoppingEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function ShoppingEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 0)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 0)(14, \"div\", 1)(15, \"button\", 10);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, ShoppingEditComponent_button_17_Template, 2, 0, \"button\", 11);\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function ShoppingEditComponent_Template_button_click_18_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵtext(19, \" Clear \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(3);\n\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.editMode ? \"Update\" : \"Add\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.PatternValidator, i3.NgModel, i3.NgForm, i4.NgIf]\n  });\n  return ShoppingEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}